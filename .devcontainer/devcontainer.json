// <h1>devcontainer.json -- define the development container</h1>
// <p>See the <a
//         href="https://containers.dev/implementors/json_reference/">reference</a>
//     for this file. This was based on the <a
//         href="https://github.com/PreTeXtBook/pretext-codespace/blob/main/.devcontainer/pretext-full/devcontainer.json">PreTeXt
//         codespace</a>.</p>
{
    "name": "Runestone editor",
    "forwardPorts": [
        // <p>The port used for a Thrift connection between the VSCode CodeChat
        //     extension and the CodeChat Server.</p>
        27376,
        // <p>The port used for an HTTP connection from the CodeChat Client to
        //     the CodeChat Server.</p>
        27377,
        // <p>The port used by a websocket connection between the CodeChat
        //     Server and the CodeChat Client.</p>
        27378
    ],
    // See the [docs](https://containers.dev/implementors/json_reference/#port-attributes).
    "portsAttributes": {
        "27376": {
            "label": "VSCode extension <-> CodeChat Server",
            "requireLocalPort": true
        },
        "27377": {
            "label": "CodeChat Client",
            "requireLocalPort": true
        },
        "27378": {
            "label": "CodeChat Client<->Server websocket",
            "requireLocalPort": true,
            // <p>Per <a
            //         href="https://github.com/community/community/discussions/10394">this
            //         issue</a>, setting port visibility isn't supported yet.
            //     Per the [docs](https://docs.github.com/en/codespaces/developing-in-codespaces/forwarding-ports-in-your-codespace#sharing-a-port), a private port requires an access token that's VSCode automatically sends over (I assume) HTTP/HTTPS. In contrast, a public port doesn't require the token, so I'm guessing  this works with non-HTTP protocols such as websockets. When this is private, the websocket never connects. So, the ``postStartCommand`` below configures this.</p>
            "visibility": "public"
        }
    },
    // <p>Use <code>postCreateCommand</code> to run commands after the container
    //     is created. See the <a href="https://containers.dev/implementors/json_reference/#lifecycle-scripts">docs</a>.</p>
    "postCreateCommand": "./.devcontainer/postCreateCommand.sh",
    // Per the [docs](https://cli.github.com/manual/gh_codespace_ports_visibility), this is another way to make a port's visibility public.
    "postStartCommand": "gh codespace ports visibility 27378:public -c $CODESPACE_NAME",

    // <p>Use a Dockerfile to build a container, so that users see very quick startup times.<p>
    "build": {
        "dockerfile": "Dockerfile"
    },

    // <p>Configure tool-specific properties.</p>
    "customizations": {
        "codespaces": {
            "openFiles": [
                "source/main.ptx",
                "project.ptx",
                "publication/publication.ptx"
            ]
        },
        "vscode": {
            "settings": {
                "editor.quickSuggestions": {
                    "other": "off"
                },
                "editor.snippetSuggestions": "top",
                "xml.validation.enabled": false,
                // Enable word wrapping.
                "editor.wordWrap": "on"
            },
            "extensions": [
                "CodeChat.codechat",
                "ms-vscode.live-server",
                "oscarlevin.pretext-tools"
            ]
        }
    }
}
